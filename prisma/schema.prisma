generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  twoFactorSecret String?
  wallets   Wallet[]
  activityLogs ActivityLog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Wallet {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  balance   Float    @default(0.0)
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  sentTransactions Transaction[] @relation("SentTransactions")
  receivedTransactions Transaction[] @relation("ReceivedTransactions")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id        Int      @id @default(autoincrement())
  type      String   // 'send' or 'receive'
  amount    Float
  fromWalletId Int?
  fromWallet Wallet? @relation("SentTransactions", fields: [fromWalletId], references: [id])
  toWalletId Int?
  toWallet Wallet? @relation("ReceivedTransactions", fields: [toWalletId], references: [id])
  status    String   // 'pending', 'completed', 'failed'
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ActivityLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  action    String
  details   String?
  createdAt DateTime @default(now())
}
